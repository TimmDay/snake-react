{"version":3,"sources":["reducers/snake.js","store/configureStore.js","components/Header.js","components/SideBar.js","components/SideBarRight.js","components/Game.js","actions/snake.js","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["defaultState","applesEaten","mostApples","snakeReducer","state","arguments","length","undefined","action","type","Object","objectSpread","n","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Header","getRandomPosition","x","innerWidth","Math","floor","random","i","star","document","createElement","className","xy","style","left","top","body","append","react_default","a","SideBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","str","concat","color","React","Component","connect","SideBarRight","Snake","game","console","log","canv","getElementById","ctx","getContext","setState","prevState","px","xVelocity","py","yVelocity","tileCount","fillStyle","fillRect","width","height","trail","forEach","trailBit","gridSize","y","tail","resetApples","push","shift","appleX","appleY","incrementApples","keyPush","evt","keyCode","addEventListener","intervalId","setInterval","clearInterval","removeEventListener","id","dispatch","history","createHistory","AppRouter","Router","components_Header","components_SideBar","Game","components_SideBarRight","Boolean","location","hostname","match","store","createStore","combineReducers","applyMiddleware","thunk","jsx","es","routers_AppRouter","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e917311c.chunk.js","sourcesContent":["const defaultState = { applesEaten: 0, mostApples: 0 };\n\nconst snakeReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'INCREMENT_APPLES':\n      return {\n        ...state,\n        applesEaten: state.applesEaten + action.n,\n        mostApples: (state.mostApples < state.applesEaten + action.n) ? state.applesEaten + action.n : state.mostApples,\n      };\n    case 'RESET_APPLES':\n    return {\n      ...state,\n      applesEaten: 0\n    }\n    default:\n      return state;\n  }\n};\nexport default snakeReducer;","import {createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport snakeReducer from '../reducers/snake';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default () => {\n  return createStore(\n    combineReducers({ snakeReducer: snakeReducer }),\n    composeEnhancers(applyMiddleware(thunk))\n  );\n}","import React from 'react';\n\nexport const Header = () => {\n  const numStars = 80;\n  const getRandomPosition = () => {\n    var x = window.innerWidth; //header spans the screen\n    var randomX = Math.floor(Math.random() * x);\n    var randomY = Math.floor(Math.random() * 180); //needs to match header height in css\n    return [randomX, randomY];\n  };\n  for (let i = 0; i < numStars; i++) {\n    let star = document.createElement('div');\n    star.className = 'star';\n    const xy = getRandomPosition();\n    star.style.left = xy[0] + 'px';\n    star.style.top = xy[1] + 'px';\n    document.body.append(star);\n  }\n\n  return (\n    <header>\n      <h1>Fizz Buzz Snake</h1>\n      <p>Mathematical turmoil has engulfed the Galapplexy</p>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass SideBar extends React.Component {\n   constructor(props) {\n       super(props);\n       this.state = {}\n   }\n\n   render () {\n    const a = this.props.applesEaten;\n    const str = `${(a % 3) ? '' : 'FIZZ'}${(a % 5) ? '' : 'BUZZ'}`;\n    return (\n      <div className=\"side-bar left\">\n        <h2>Apples:\n          <span style={{color: str ? 'lime' : '#fff' }}>{str ? str : this.props.applesEaten}</span>\n        </h2>\n        <h2>Record: <span>{`${this.props.mostApples}`}</span></h2>\n        <p>Arrow keys: normal movement</p>\n        <p>A, W, S, D keys: crazy movement</p>\n      </div>\n    )\n   }\n}\n\nconst mapStateToProps = state => {\n  return {\n    applesEaten: state.snakeReducer.applesEaten,\n    mostApples: state.snakeReducer.mostApples\n  };\n};\n\nexport default connect(mapStateToProps)(SideBar);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass SideBarRight extends React.Component {\n   constructor(props) {\n       super(props);\n       this.state = {}\n   }\n\n   render () {\n    return (\n      <div className=\"side-bar right\">\n        <p>Eat the red apples to grow the snake</p>\n        <p>NOTE: real life snakes should never eat apples</p>\n      </div>\n    )\n   }\n}\n\nexport default SideBarRight;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { incrementApples, resetApples } from '../actions/snake';\n\nclass Snake extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      px: 4,\n      py: 4, // start snake head position x and y\n      appleX: 15,\n      appleY: 15, // start apple position x and y\n      gridSize: 20,\n      tileCount: 20, // grid size, tile count. should multiply to canvas side dimension (height).\n      xVelocity: 0,\n      yVelocity: 0, //x and y velocity (starting speed in x,y directions). works off key press so 0 to start\n      trail: [{ x: 4, y: 4 }], //to store positions of the trailing snake body pixels\n      tail: 5 // tail length\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.keyPush); //listen for keystrokes in below function\n    const intervalId = setInterval(this.game, 1000 / 12); //call the game function x times per second (1000 ms). increase for game speed\n    this.setState({ intervalId: intervalId }); // store intervalId in the state so it can be accessed later\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n    document.removeEventListener('keydown');\n  }\n\n  game = () => {\n    console.log('game func');\n    const canv = document.getElementById('snake-game-canvas');\n    const ctx = canv.getContext('2d'); //get graphics context/buffer\n\n    //move the snake head 1 pixel in the current x and y directions\n    this.setState(prevState => ({ px: (prevState.px += this.state.xVelocity) }));\n    this.setState(prevState => ({ py: (prevState.py += this.state.yVelocity) }));\n\n    //if go off screen to left, reset position to right, etc\n    if (this.state.px < 0) this.setState({ px: this.state.tileCount - 1 });\n    if (this.state.px > this.state.tileCount - 1) this.setState({ px: 0 });\n    if (this.state.py < 0) this.setState({ py: this.state.tileCount - 1 });\n    if (this.state.py > this.state.tileCount - 1) this.setState({ py: 0 });\n\n    ctx.fillStyle = '#000'; //background color\n    ctx.fillRect(0, 0, canv.width, canv.height); //paint the whole canvas black\n\n    ctx.fillStyle = 'lime'; //snake body color\n    // ctx.fillRect(this.state.trail[0].x * this.state.gridSize, this.state.trail[0].y * this.state.gridSize, this.state.gridSize-2, this.state.gridSize-2);\n\n    this.state.trail.forEach(trailBit => {\n      // paint snake pixels. the -2s give the 2 pixel border\n      ctx.fillRect(\n        trailBit.x * this.state.gridSize,\n        trailBit.y * this.state.gridSize,\n        this.state.gridSize - 2,\n        this.state.gridSize - 2\n      );\n\n      // HIT TAIL, reset to short tail\n      if (trailBit.x === this.state.px && trailBit.y === this.state.py) {\n        this.setState({ tail: 5 });\n        this.props.resetApples();\n      }\n    });\n\n    //push current position to trail array. to store for painting on next game iteration\n    this.state.trail.push({ x: this.state.px, y: this.state.py });\n\n    while (this.state.trail.length > this.state.tail) this.state.trail.shift(); //remove back elements of trail arr until it has length tail\n\n    // EAT APPLE! when apple position === snake head position\n    if (\n      this.state.appleX === this.state.px &&\n      this.state.appleY === this.state.py\n    ) {\n      this.props.incrementApples(1); //inform redux state\n      this.setState(prevState => ({ tail: prevState.tail + 1 })); //extend tail\n      this.setState({ appleX: Math.floor(Math.random() * this.state.tileCount) });\n      this.setState({ appleY: Math.floor(Math.random() * this.state.tileCount) }); // random x,y for new apple position\n    }\n\n    ctx.fillStyle = 'red'; // paint apple\n    ctx.fillRect(\n      this.state.appleX * this.state.gridSize,\n      this.state.appleY * this.state.gridSize,\n      this.state.gridSize - 2,\n      this.state.gridSize - 2\n    );\n  };\n\n  keyPush = evt => {\n    switch (evt.keyCode) {\n      case 37: // left arrow\n        this.setState({ xVelocity: -1, yVelocity: 0 });\n        break;\n      case 38: // up arrow\n        this.setState({ xVelocity: 0, yVelocity: -1 });\n        break;\n      case 39: // right arrow\n        this.setState({ xVelocity: 1, yVelocity: 0 });\n        break;\n      case 40: // down arrow\n        this.setState({ xVelocity: 0, yVelocity: 1 });\n        break;\n      case 87: // w. up/right diagonal\n        this.setState({ xVelocity: 1, yVelocity: -1 });\n        break;\n      case 65: // a. up/left diagonal\n        this.setState({ xVelocity: -1, yVelocity: -1 });\n        break;\n      case 83: // s. down/left diagonal\n        this.setState({ xVelocity: -1, yVelocity: 1 });\n        break;\n      case 68: // d. down/right diagonal\n        this.setState({ xVelocity: 1, yVelocity: 1 });\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    return <canvas id=\"snake-game-canvas\" width=\"400\" height=\"400\" />;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  incrementApples: (n) => dispatch(incrementApples(n)),\n  resetApples: () => dispatch(resetApples()),\n});\n\nexport default connect(undefined,mapDispatchToProps)(Snake);","export const incrementApples = (n) => ({\n  type: 'INCREMENT_APPLES',\n  n\n});\n\nexport const resetApples = () => ({ type: 'RESET_APPLES' });","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport Header from '../components/Header';\nimport SideBar from './../components/SideBar';\nimport SideBarRight from './../components/SideBarRight';\nimport Game from './../components/Game';\n\nexport const history = createHistory();\n\nconst AppRouter = () => (\n  <Router history={history}>\n    <div>\n      <Header />\n      <main>\n      < SideBar />\n      < Game />\n      {/* <Switch>\n        <Route path=\"/\" component={Game} exact={true} />\n      </Switch> */}\n      < SideBarRight />\n      </main>\n    </div>\n  </Router>\n);\n\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'normalize.css/normalize.css';\nimport './App.scss'\nimport './index.scss';\nimport configureStore from './store/configureStore';\nimport AppRouter from './routers/AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\nconst jsx = (\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>\n);\n\nReactDOM.render(jsx, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}